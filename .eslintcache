[{"/home/cwelshofer/workspace/finalcapstone-client/src/index.js":"1","/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolution.js":"2","/home/cwelshofer/workspace/finalcapstone-client/src/components/ApplicationViews.js":"3","/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/ResolutionDetail.js":"4","/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/ResolutionProvider.js":"5","/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/ResolutionList.js":"6","/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/Resolution.js":"7","/home/cwelshofer/workspace/finalcapstone-client/src/components/auth/Login.js":"8","/home/cwelshofer/workspace/finalcapstone-client/src/components/auth/Register.js":"9","/home/cwelshofer/workspace/finalcapstone-client/src/components/Profiles/UserProvider.js":"10","/home/cwelshofer/workspace/finalcapstone-client/src/components/nav/NavBar.js":"11","/home/cwelshofer/workspace/finalcapstone-client/src/components/tags/TagProvider.js":"12","/home/cwelshofer/workspace/finalcapstone-client/src/components/tags/TagResolutionProvider.js":"13","/home/cwelshofer/workspace/finalcapstone-client/src/components/utils/DeleteTagItem.js":"14","/home/cwelshofer/workspace/finalcapstone-client/src/components/utils/DeleteItem.js":"15","/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/UserResolutions.js":"16","/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/ResolutionForm.js":"17","/home/cwelshofer/workspace/finalcapstone-client/src/components/Categories/CategoryProvider.js":"18","/home/cwelshofer/workspace/finalcapstone-client/src/components/Profiles/HomeList.js":"19","/home/cwelshofer/workspace/finalcapstone-client/src/components/tags/TagForm.js":"20","/home/cwelshofer/workspace/finalcapstone-client/src/components/tags/Tag.js":"21","/home/cwelshofer/workspace/finalcapstone-client/src/components/tags/TagList.js":"22","/home/cwelshofer/workspace/finalcapstone-client/src/components/utils/DeleteTag.js":"23","/home/cwelshofer/workspace/finalcapstone-client/src/components/Categories/CategoryList.js":"24","/home/cwelshofer/workspace/finalcapstone-client/src/components/utils/DeleteCategory.js":"25","/home/cwelshofer/workspace/finalcapstone-client/src/components/Categories/CategoryForm.js":"26","/home/cwelshofer/workspace/finalcapstone-client/src/components/Profiles/UserDetail.js":"27","/home/cwelshofer/workspace/finalcapstone-client/src/components/Profiles/UserList.js":"28","/home/cwelshofer/workspace/finalcapstone-client/src/components/Subscriptions/SubscriptionProvider.js":"29","/home/cwelshofer/workspace/finalcapstone-client/src/components/Profiles/UsersTable.js":"30","/home/cwelshofer/workspace/finalcapstone-client/src/components/Profiles/Columns.js":"31","/home/cwelshofer/workspace/finalcapstone-client/src/components/Comments/CommentProvider.js":"32","/home/cwelshofer/workspace/finalcapstone-client/src/components/Comments/CommentForm.js":"33","/home/cwelshofer/workspace/finalcapstone-client/src/components/Comments/Comment.js":"34","/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/MyCompletedResolutions.js":"35","/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/CompletedResolutions.js":"36","/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/AllUsersResolutions.js":"37","/home/cwelshofer/workspace/finalcapstone-client/src/components/Profiles/ProfileResolutions.js":"38"},{"size":428,"mtime":1608139341466,"results":"39","hashOfConfig":"40"},{"size":1389,"mtime":1608135777342,"results":"41","hashOfConfig":"40"},{"size":5512,"mtime":1609862809896,"results":"42","hashOfConfig":"40"},{"size":5322,"mtime":1609544369557,"results":"43","hashOfConfig":"40"},{"size":6094,"mtime":1609951346311,"results":"44","hashOfConfig":"40"},{"size":1187,"mtime":1609951333995,"results":"45","hashOfConfig":"40"},{"size":466,"mtime":1608094479086,"results":"46","hashOfConfig":"40"},{"size":3450,"mtime":1608146787411,"results":"47","hashOfConfig":"40"},{"size":4160,"mtime":1609216378751,"results":"48","hashOfConfig":"40"},{"size":1622,"mtime":1608146566907,"results":"49","hashOfConfig":"40"},{"size":3163,"mtime":1609798876653,"results":"50","hashOfConfig":"40"},{"size":2042,"mtime":1608315940743,"results":"51","hashOfConfig":"40"},{"size":2258,"mtime":1608317317199,"results":"52","hashOfConfig":"40"},{"size":1667,"mtime":1608240944961,"results":"53","hashOfConfig":"40"},{"size":1571,"mtime":1608240729212,"results":"54","hashOfConfig":"40"},{"size":1342,"mtime":1608322678099,"results":"55","hashOfConfig":"40"},{"size":9856,"mtime":1609866924041,"results":"56","hashOfConfig":"40"},{"size":2342,"mtime":1608322946454,"results":"57","hashOfConfig":"40"},{"size":3665,"mtime":1609859827889,"results":"58","hashOfConfig":"40"},{"size":3490,"mtime":1608582198183,"results":"59","hashOfConfig":"40"},{"size":225,"mtime":1609863406714,"results":"60","hashOfConfig":"40"},{"size":1771,"mtime":1608588213763,"results":"61","hashOfConfig":"40"},{"size":1503,"mtime":1608587845872,"results":"62","hashOfConfig":"40"},{"size":1826,"mtime":1608581969272,"results":"63","hashOfConfig":"40"},{"size":1581,"mtime":1608587991756,"results":"64","hashOfConfig":"40"},{"size":3038,"mtime":1608582040526,"results":"65","hashOfConfig":"40"},{"size":3449,"mtime":1609862765133,"results":"66","hashOfConfig":"40"},{"size":3537,"mtime":1608756164318,"results":"67","hashOfConfig":"40"},{"size":1837,"mtime":1608754290872,"results":"68","hashOfConfig":"40"},{"size":684,"mtime":1608756035180,"results":"69","hashOfConfig":"40"},{"size":551,"mtime":1608754879677,"results":"70","hashOfConfig":"40"},{"size":2163,"mtime":1608842245615,"results":"71","hashOfConfig":"40"},{"size":3873,"mtime":1609365038454,"results":"72","hashOfConfig":"40"},{"size":1494,"mtime":1609728781109,"results":"73","hashOfConfig":"40"},{"size":1425,"mtime":1609721030086,"results":"74","hashOfConfig":"40"},{"size":1204,"mtime":1609715998681,"results":"75","hashOfConfig":"40"},{"size":1393,"mtime":1609717195239,"results":"76","hashOfConfig":"40"},{"size":1691,"mtime":1609797305381,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"15i2nzd",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"80"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"80"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/cwelshofer/workspace/finalcapstone-client/src/index.js",[],["168","169"],"/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolution.js",[],"/home/cwelshofer/workspace/finalcapstone-client/src/components/ApplicationViews.js",["170","171"],"/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/ResolutionDetail.js",["172","173","174","175","176","177","178","179","180","181"],"/* displays details of a post, lets user add reactions (maximum one of each) to post, \nlets user edit post if they are the author, or see author's profile if it was written by another user */\nimport React, { useContext, useEffect, useState, useRef } from \"react\";\nimport { ResolutionContext } from \"./ResolutionProvider\";\nimport { Link } from \"react-router-dom\";\nimport { TagResolutionContext } from \"../tags/TagResolutionProvider\";\nimport { TagContext } from \"../tags/TagProvider\";\nimport { DeleteItem } from \"../utils/DeleteItem\"\nimport { Box, Heading } from \"grommet\"\n\n\nexport const ResolutionDetails = (props) => {\n  const { getResolutionById, resolution, setResolution, getTagsByResolution, resolutionTags} = useContext(ResolutionContext);\n  const { tag, tags, getTags } = useContext(TagContext)\n  const { TagResolutions } = useContext(TagResolutionContext);\n\n  //state variable and variables needed to make tag management work\n  const [selectedTagResolutionId, setSelectedTagResolutionId] = useState(0);\n  const [filteredTags, setFilteredTags] = useState([])\n  const [stateTagIDArr, setTagIDArr] = useState([])\n\n  //other variables defined through useRef and the URL\n  const tagResolutionId = useRef(null);\n  const resolutionId = parseInt(props.match.params.resolutionId);\n\n  //gets a post by the post ID and gets the tags associated with that post\n  useEffect(() => {\n    getTags()\n    getResolutionById(resolutionId).then(setResolution);\n    getTagsByResolution(resolutionId);\n  }, [TagResolutions]);\n\n  useEffect(() => {\n    //filters tags that haven't been selected yet to be options for adding\n    const tagIDs = tags.map(t => t.id)\n    const resolutionTagIDs = resolutionTags.map(pt => pt.id)\n    const diffIDs = tagIDs.filter(t => !resolutionTagIDs.includes(t))\n    const filteredTagObjs = diffIDs.map(id => {\n      return tags.find(t => t.id === id)\n    })\n    setFilteredTags(filteredTagObjs)\n  }, [resolutionTags])\n\n\n  //state variable and functions to show/hide the tag management feature\n  const [open, setOpen] = useState();\n  \n  //takes what is selected in the tag management dropdown and sets the state variable with that value\n  const handleChange = (e) => {\n    setSelectedTagResolutionId(parseInt(e.target.value));\n  };\n  \n  const handleAddTags = (browserEvent) => {\n    const stateCopyID = stateTagIDArr.slice()\n    let newTagItem = parseInt(browserEvent.target.value)\n    stateCopyID.push(newTagItem)\n    //IDs of tags to be added get stored in this variable\n    setTagIDArr(stateCopyID)\n  }\n\n  return (\n    <>\n       <Box margin= \"medium\">\n      {/* Post Detail JSX */}\n      <section className=\"container__card\">\n        <section className=\"container__cardContent\">  \n          <section className=\"container__cardContentLeft\"></section>        \n          <Heading level = \"2\">{resolution.title}</Heading>\n          \n          {/* if current user wrote the post, show an edit button */}\n          {resolution.created_by_current_user \n          ? (\n              <section className=\"container__cardContentTop\">              \n                <button onClick={() => props.history.push(`/resolutions/edit/${resolution.id}`)}>\n                  EDIT\n                </button>\n\n                {resolution.created_by_current_user ? <DeleteItem resolutionId= {resolution.id}/> : <></>}\n              </section>\n          )\n          : (``)\n          }\n          \n          <img className=\"resolution__image\" src={resolution.image_url} style={{width: `500px`}} alt=\"article\"></img>\n          {/* <ReactionList {...props} /> */}\n          <div className=\"resolution__content\">{resolution.content}</div>\n          <div key={resolution.id} className=\"resolution__date\">\n            Published: {new Date(resolution.publication_date).toLocaleDateString(\"en-US\")}\n          </div>\n          <div>\n            {resolution.created_by_current_user \n            ? (\n              <section className=\"container__cardContentBottom\">\n                <div className=\"resolution_author\">\n                  By: {resolution.user.user.first_name} (you)\n                </div>\n              </section>\n            ) \n            : (\n              <>\n            <section className=\"container__cardContentBottom\">\n                <div className=\"resolution_author\">\n                  {\"By: \"} \n                  <Link to={{ pathname: `/profiles/${resolution.user.id}` }}>\n                      {resolution.user.user.first_name}\n                  </Link>\n                </div>\n          \n        \n\n          {/* If current user did not write the post, show the author name with a link to their profile*/}\n         \n                \n            </section>\n            \n            <button className=\"container__cardContentTop\" onClick={() => props.history.push(`/resolutions/comments/${resolution.id}`)}>COMMENTS</button>\n           \n            </>\n            \n            )\n            }\n          </div>\n        </section>\n\n        <section className=\"container__cardContentRight\">          \n          <div>\n            {resolutionTags.map((resolutionTag) => {\n              return  resolutionTag.tag.label ? <div className=\"displayedTag\"># {resolutionTag.tag.label}</div>  : null      \n                      \n            })}\n          </div>\n        </section>\n\n\n      </section>\n      </Box>\n  \n      \n    </>\n  );\n};\n","/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/ResolutionProvider.js",[],"/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/ResolutionList.js",["182"],"/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/Resolution.js",[],"/home/cwelshofer/workspace/finalcapstone-client/src/components/auth/Login.js",["183","184"],"//login page\nimport React, { useRef, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Anchor,\n  Box,\n  Button,\n  Form,\n  FormField,\n  Heading,\n  Layer,\n  TextInput,\n} from \"grommet\";\n\nexport const Login = (props) => {\n  const user = useRef();\n  const password = useRef();\n\n  const [show, setShow] = useState();\n  const [showUser, setShowUser] = useState();\n\n  // see if user already exists\n  const existingUserCheck = () => {\n    return fetch(`http://localhost:8000/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: user.current.value,\n        password: password.current.value,\n      }),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((user) => {\n        return user !== undefined ? user : false;\n      });\n  };\n\n  const handleLogin = (e) => {\n    console.log(user.current.value, password.current.value);\n    e.preventDefault();\n    existingUserCheck().then((exists) => {\n      if (exists.valid) {\n        localStorage.setItem(\"resolution_user_id\", exists.token);\n        props.history.push(\"/home\");\n      } else if (exists.valid != true) {\n        setShow(true);\n      } else if (!exists) {\n        setShowUser(true);\n      }\n    });\n  };\n\n  return (\n    <Box direction=\"column\" animation=\"fadeIn\">\n      <Box className=\"container--login\">\n        {showUser && (\n          <Layer>\n            <Heading level=\"3\">User does not exist</Heading>\n            <Button\n              label=\"Close\"\n              className=\"button--close\"\n              onClick={() => setShowUser(false)}\n            />\n          </Layer>\n        )}\n        {show && (\n          <Layer>\n            <Heading level=\"3\">Password does not match</Heading>\n            <Button\n              className=\"button--close\"\n              label=\"Close\"\n              primary\n              onClick={() => setShow(false)}\n            />\n          </Layer>\n        )}\n      </Box>\n      <Box direction=\"column\" alignSelf=\"center\">\n        <Heading level=\"1\">Friends and Family Resolutions</Heading>\n        <Heading level=\"2\">Sign In</Heading>\n        <Form className=\"form--login\" onSubmit={handleLogin}>\n          <FormField label=\"Email address\" htmlFor=\"inputEmail\">\n            <TextInput\n              ref={user}\n              type=\"email\"\n              id=\"email\"\n              placeholder=\"Email address\"\n              required\n            />\n          </FormField>\n          <FormField label=\"Password\" htmlFor=\"inputPassword\">\n            <TextInput\n              ref={password}\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n              required\n            />\n          </FormField>\n          <FormField>\n            <Box align=\"center\" pad=\"medium\">\n              <Button\n                size=\"large\"\n                label=\"sign in\"\n                fill={false}\n                margin=\"small\"\n                pad=\"small\"\n                primary\n                type=\"submit\"\n              />\n            </Box>\n          </FormField>\n        </Form>\n      </Box>\n      <Box className=\"link--register\">\n        <Anchor\n          as={Link}\n          to=\"/register\"\n          title=\"register\"\n          href=\"/register\"\n          margin=\"small\"\n          justify=\"center\"\n        >\n          Not a member yet?\n        </Anchor>\n      </Box>\n    </Box>\n  );\n};\n","/home/cwelshofer/workspace/finalcapstone-client/src/components/auth/Register.js",[],"/home/cwelshofer/workspace/finalcapstone-client/src/components/Profiles/UserProvider.js",[],"/home/cwelshofer/workspace/finalcapstone-client/src/components/nav/NavBar.js",["185"],"/home/cwelshofer/workspace/finalcapstone-client/src/components/tags/TagProvider.js",[],"/home/cwelshofer/workspace/finalcapstone-client/src/components/tags/TagResolutionProvider.js",[],"/home/cwelshofer/workspace/finalcapstone-client/src/components/utils/DeleteTagItem.js",[],"/home/cwelshofer/workspace/finalcapstone-client/src/components/utils/DeleteItem.js",["186"],"//delete button component with confirmation modal\nimport React, { useState, useContext } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { ResolutionContext } from \"../Resolutions/ResolutionProvider\";\n\n\nexport const DeleteItem = ({ resolutionId }) => {\n  const { deleteResolution } = useContext(ResolutionContext);\n  const history = useHistory()\n  \n  //state variable and functions that change state of the state variable\n  const [open, setOpen] = useState();\n  const onOpen = () => setOpen(true);\n  const onClose = () => setOpen(undefined);\n\n  //toggles the CSS class name depending on if the modal is open or not\n  const showHideClassName = open ? \"modal display-block\" : \"modal display-none\";\n\n  //function that is called when the delete button is clicked. \n  //This function deletes an entry in the Post table.\n  //Lastly the function calls the close function which resets our modal state.\n  const deleteThisResolution = () => {\n    deleteResolution(resolutionId)\n    .then(() => {\n      history.push(\"/home\")\n    })\n  };\n\n  return (\n    <>\n      <button onClick={onOpen}>DELETE</button>\n      {open && (\n        <div className={showHideClassName}>\n          <div className=\"modal-main\">\n            <h3>\n              Confirm\n            </h3>\n            <p>Are you sure you want to delete?</p>\n            <div>\n              <button onClick={deleteThisResolution}> <strong>Delete</strong></button>\n              <button onClick={onClose}> Cancel </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/UserResolutions.js",["187"],"//shows user their own posts in MyPosts view, allows them to delete a post\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ResolutionContext } from \"./ResolutionProvider\";\nimport { UserContext } from \"../Profiles/UserProvider\"\n\n\nexport const UsersResolutions = () => {\n  const { getResolutionByUser } = useContext(ResolutionContext);\n  const { getCurrentUser } = useContext(UserContext)\n\n  const [usersResolutions, setUsersResolutions] = useState([]);\n \n  useEffect(() => {\n    getCurrentUser()\n    //returns res.json() that is immediately passed to the next .then()\n    //res.json() is the current user object\n      .then((user) => getResolutionByUser(user.id))\n      .then(setUsersResolutions)\n  }, [])\n\n  return (\n    <>\n      <h2>My Resolutions</h2>\n      {usersResolutions.map((r) => {\n        return (\n          <div key={r.id} className=\"container__card\">\n            <div className=\"container__cardContent\">\n              <p>\n                <Link to={{ pathname: `resolutions/${r.id}` }}>\n                  <strong>{r.title}</strong>\n                </Link>\n              </p>\n              <p>{r.user.user.first_name}</p>\n              {r.category==null? \"\" :<p>{r.category.label}</p>}\n            </div>\n          </div>\n        )\n      }).reverse()}\n    </>\n  )\n}\n","/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/ResolutionForm.js",["188","189","190","191","192","193","194","195","196","197","198","199","200","201"],"/home/cwelshofer/workspace/finalcapstone-client/src/components/Categories/CategoryProvider.js",[],"/home/cwelshofer/workspace/finalcapstone-client/src/components/Profiles/HomeList.js",["202","203"],"/home/cwelshofer/workspace/finalcapstone-client/src/components/tags/TagForm.js",["204"],"//form to create a new tag\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { TagContext } from \"./TagProvider\"\n\n\n\n\nexport const TagForm = (props) => {\n    // Use the required context providers for data\n    const { createTag, updateTag, getTagById } = useContext(TagContext)\n    const editMode = props.match.params.hasOwnProperty(\"tagId\")\n\n    //state variable and functions that change state of the state variable\n    const [open, setOpen] = useState();\n    const onOpen = () => setOpen(true);\n    const onClose = () => setOpen(undefined);\n\n    //toggles the CSS class name depending on if the modal is open or not\n    const showHideClassName = open ? \"modal display-block\" : \"modal display-none\";\n\n    const [tagObj, setTagObj] = useState({})\n\n    const handleControlledInputChange = (event) => {\n        /*\n            When changing a state object or array, always create a new one\n            and change state instead of modifying current one\n        */\n        const newTag = Object.assign({}, tagObj)          // Create copy\n        newTag[event.target.name] = event.target.value    // Modify copy\n        setTagObj(newTag)                                 // Set copy as new state\n    }\n\n    useEffect(() => {\n        if (editMode) {\n            getTagById(parseInt(props.match.params.tagId))\n                .then(tag => {\n                    setTagObj({\n                        label: tag.label\n                    })\n                })\n        }\n    }, [props.match.params.tagId])\n\n    return (\n        <fieldset className=\"tagForm\">\n            <h2 className=\"tagForm__title\">Tag form</h2>\n            <div className=\"form-group\">\n\n                <label htmlFor=\"label\">Enter tag name: </label>\n                <input type=\"text\" name=\"label\" required autoFocus className=\"form-control\"\n                    placeholder=\"ex: sports, politics, etc\"\n                    value={tagObj.label}\n                    onChange={handleControlledInputChange}\n                />\n\n            </div>\n            {editMode ? <button onClick={onOpen}>EDIT</button> : \"\" }\n\n            {open && (\n                <div className={showHideClassName}>\n                    <div className=\"modal-main\">\n                        <h3>\n                            Confirm\n            </h3>\n                        <p>Are you sure you want to make these changes?</p>\n                        <div>\n                            <button onClick={() => {\n                                updateTag({\n                                    id: parseInt(props.match.params.tagId),\n                                    label: tagObj.label\n                                })\n                                    .then(() => {\n                                        props.history.push(`/tags`)\n                                    })\n                            }}> <strong>Edit</strong></button>\n                            <button onClick={onClose}> Cancel </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n            {editMode ? \"\" : <button type=\"submit\"\n                onClick={evt => {\n                    evt.preventDefault()\n                    createTag({\n                        label: tagObj.label\n                    })\n                        .then(() => props.history.push(\"/tags\"))\n                }}\n\n                className=\"btn btn-primary\">\n                Create Tag\n                </button>}\n        </fieldset>\n    )\n}","/home/cwelshofer/workspace/finalcapstone-client/src/components/tags/Tag.js",["205"],"/home/cwelshofer/workspace/finalcapstone-client/src/components/tags/TagList.js",["206","207"],"//renders list of tags in tag management, maps over tags in DB and displays each individual tag component\nimport React, { useContext, useEffect, useState } from \"react\"\nimport { TagContext } from \"./TagProvider\"\nimport { UserContext } from \"../Profiles/UserProvider\"\nimport { DeleteTag } from \"../utils/DeleteTag\"\nimport { Link } from \"react-router-dom\"\n\n\nexport const TagList = ({ props }) => {\n    const { getTags, tags} = useContext(TagContext)\n    const { getCurrentUser } = useContext(UserContext)\n    const [currentUser, setCurrentUser] = useState({ user: {} })\n\n\n    // Initialization effect hook -> Go get tag data\n    useEffect(() => {\n        getTags()\n    }, [])\n\n    useEffect(() => {\n        getCurrentUser()\n            .then(setCurrentUser)\n    }, [])\n\n\n    return (\n        <div className=\"tag_container\">\n            <h1 className=\"heading\">Tags</h1>\n            <div className=\"tags_container\">\n                {\n                    tags.map(tag => {\n                        return (<>\n                            <div>{tag.label}</div>\n                            {currentUser.user.is_staff ? \n                                <>\n                                <DeleteTag tagId={tag.id} /> \n                                <div className=\"new_tag_btn_container\"> \n                                    <Link to={`/tags/edit/${tag.id}`}>\n                                        <button className=\"new_tag_btn\">Edit Tag</button>\n                                    </Link>\n                                </div>\n                                </> : <></>}\n                        </>)\n                    })\n\n                }\n            </div>\n            <Link className=\"tagform__link\" to=\"/tags/create\">Create a new tag</Link>\n        </div>\n\n    )\n}","/home/cwelshofer/workspace/finalcapstone-client/src/components/utils/DeleteTag.js",[],"/home/cwelshofer/workspace/finalcapstone-client/src/components/Categories/CategoryList.js",["208","209"],"//list of categories the user has created\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { CategoryContext } from \"./CategoryProvider\";\nimport { UserContext } from \"../Profiles/UserProvider\"\nimport { DeleteCategory } from \"../utils/DeleteCategory\"\nimport { Link } from \"react-router-dom\";\n\n\nexport const CategoryList = (props) => {\n  const { categories, getCategories } = useContext(CategoryContext)\n  const { getCurrentUser } = useContext(UserContext)\n  const [currentUser, setCurrentUser] = useState({ user: {} })\n\n  //gets the categories from the database\n  useEffect(() => {\n    getCategories()\n\n  }, []);\n\n  useEffect(() => {\n    getCurrentUser()\n      .then(setCurrentUser)\n  }, []);\n\n  //this function is called on the click of the '+category' button\n  // it takes us to a new route where a category creation form is rendered\n  const toCreateCreateCategory = () => {\n    props.history.push(\"/categories/create\");\n  };\n\n  return (\n\n    <div style={{ marginTop: \"2rem\" }}>\n      <h3>Categories</h3>\n      <div className=\"categoryList\">\n        {categories.map((categoryObject) => {\n          return <>\n            <div key={categoryObject.id}>{categoryObject.label}</div>\n            { //only shows edit and delete if the user is an admin\n              currentUser.user.is_staff ?\n                <>\n                  <DeleteCategory categoryId={categoryObject.id} />\n                  <div className=\"new_category_btn_container\">\n                    <Link to={`/editcategory/${categoryObject.id}`}>\n                      <button className=\"new_category_btn\" >EDIT</button>\n                    </Link>\n                  </div>\n                </>\n                : \"\"}\n          </>\n        })}\n        <button onClick={toCreateCreateCategory}>+ Category</button>\n      </div>\n    </div>\n\n\n  )\n};\n","/home/cwelshofer/workspace/finalcapstone-client/src/components/utils/DeleteCategory.js",[],"/home/cwelshofer/workspace/finalcapstone-client/src/components/Categories/CategoryForm.js",["210","211","212"],"//Form to let user create a new category\nimport React, { useEffect, useContext, useState, useHistory } from \"react\";\nimport { CategoryContext } from \"./CategoryProvider\";\n\n\n\nexport const CategoryForm = (props) => {\n  const { getCategories, createCategory, editCategory, getCategoryById } = useContext(CategoryContext)\n  \n  const editMode = props.match.url.split(\"/\")[1] === \"editcategory\" //checks url to see if editMode\n\n  const [currentCategory, setCurrentCategory] = useState({})\n\n  //state variable and functions that change state of the state variable\n  const [open, setOpen] = useState();\n  const onOpen = () => setOpen(true);\n  const onClose = () => setOpen(undefined);\n\n  const showHideClassName = open ? \"modal display-block\" : \"modal display-none\";\n\n  //gets the categories from the database\n  useEffect(() => {\n    getCategories()\n  }, [])\n\n  useEffect(() => {\n    if (editMode) {\n      getCategoryById(parseInt(props.match.params.categoryId))\n        .then(category => {\n          setCurrentCategory({\n            label: category.label\n          })\n        })\n    }\n  }, [props.match.params.categoryId])\n\n  //function that is called when a change happens in the form. It sets the state variable that is imported via context.\n  //whatever the value that goes in the input (the evt) is being written as single property object with a key of 'type'\n  //and the value of the form input\n  const handleChange = (event) => {\n    const newCategoryState = Object.assign({}, currentCategory)\n    newCategoryState[event.target.name] = event.target.value\n    setCurrentCategory(newCategoryState)\n  }\n\n  return (\n\n    <fieldset>\n      <label htmlFor=\"label\">\n        <div className=\"label\">Category</div>\n        <input\n          type=\"text\"\n          name=\"label\"\n          value={currentCategory.label}\n          onChange={handleChange}\n        />\n      </label>\n      {editMode ? <button className=\"new_category_btn\" onClick={onOpen}>EDIT</button> : \"\"}\n\n      {open && (\n\n        <div className={showHideClassName}>\n          <div className=\"modal-main\">\n            <h3>Confirm</h3>\n            <p>Are you sure you want to make these changes?</p>\n            <div>\n              <button onClick={() => {\n                editCategory({\n                  id: props.match.params.categoryId,\n                  label: currentCategory.label\n                }).then(() => {\n                  props.history.push(\"/categories\")\n                })\n              }}>\n                <strong>Edit</strong>\n              </button>\n              <button onClick={onClose}> Cancel </button>\n            </div>\n          </div>\n        </div>\n\n\n      )}\n      {editMode ? \"\" :\n        <button\n          type=\"submit\"\n          onClick={(evt) => {\n            evt.preventDefault();\n            createCategory({\n              label: currentCategory.label\n            })\n              .then(() => props.history.push(\"/categories\"))\n          }}\n          className=\"btn btn-primary\"\n        >Create New Category</button>\n      }\n    </fieldset>\n\n  );\n};\n","/home/cwelshofer/workspace/finalcapstone-client/src/components/Profiles/UserDetail.js",["213","214","215","216","217","218","219","220"],"/home/cwelshofer/workspace/finalcapstone-client/src/components/Profiles/UserList.js",["221","222"],"/home/cwelshofer/workspace/finalcapstone-client/src/components/Subscriptions/SubscriptionProvider.js",[],"/home/cwelshofer/workspace/finalcapstone-client/src/components/Profiles/UsersTable.js",["223","224"],"/home/cwelshofer/workspace/finalcapstone-client/src/components/Profiles/Columns.js",[],"/home/cwelshofer/workspace/finalcapstone-client/src/components/Comments/CommentProvider.js",[],"/home/cwelshofer/workspace/finalcapstone-client/src/components/Comments/CommentForm.js",["225"],"import React, {useContext, useEffect, useRef, useState} from \"react\"\n\nimport {CommentContext} from \"./CommentProvider\"\n\nexport const CommentForm = (props) => {\n    const { addComment, updateComment, getComments } = useContext(CommentContext) \n\n    const [ comment, setComment ] = useState({subject: '', content: ''})\n\n    const subject = useRef(null)\n    const content = useRef(null)\n\n    const editMode = props.match.params.hasOwnProperty(\"commentId\") // true or false\n    \n\n    useEffect(() => {\n        if (editMode) {\n            const commentId = parseInt(props.match.params.commentId);\n            \n            getComments(commentId)\n                .then(res => setComment(res))\n        }\n    }, [] )\n\n    const inputHandler = (e) => {\n        const newComment = {...comment}    // Create a copy\n        newComment[e.target.name] = e.target.value     // Modify copy\n        \n        setComment(newComment)\n    } \n\n    \n\n    const saveComment = () => {\n        if(editMode) {\n        updateComment(parseInt(props.match.params.commentId), {\n            subject : comment.subject,\n            content : comment.content,\n            resolution_id : comment.resolution_id,\n            created_on : comment.created_on\n        })\n        .then(props.history.push(`/comments/resolutions/${comment.resolution_id}`))\n\n        } else {\n        addComment({\n            subject : comment.subject,\n            content : comment.content,\n            user_id : parseInt(localStorage.getItem(\"resolution_user_id\")),\n            resolution_id : parseInt(props.match.params.resolutionId)\n        }).then(props.history.push(`/comments/resolutions/${props.match.params.resolutionId}`))\n        }\n\n    }\n        \n    return (\n        <form className=\"CommentForm\">\n            <h3 className=\"CommentForm__title\">Add Comment</h3>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"subject\">Subject : </label>\n                    <input type=\"text\" ref={subject} name=\"subject\" required autoFocus className=\"form-control\" value={comment.subject} onChange={inputHandler}\n                    />\n                </div>\n            </fieldset>\n            <fieldset>\n                <div className=\"form-group\">\n                    <label htmlFor=\"content\">Comment :</label>\n                    <input type=\"text\" ref={content} name=\"content\" required autoFocus className=\"form-control\" value={comment.content} onChange={inputHandler}\n                    \n                    />\n                </div>\n            </fieldset>\n            \n            {\n                \n                editMode ?\n                <div className=\"buttons\">\n                <button type=\"submit\" className=\"CommentSaveBtn btn btn-primary\"\n                    onClick={e => {\n                        e.preventDefault()\n                        saveComment()\n                    }}>Update</button>\n                <button className=\"btn btn-secondary\" \n                    onClick={() => {\n                        props.history.push(`/comments/resolutions/${comment.resolution_id}`)}}>\n                Cancel</button>\n                </div>\n                :\n                <div className=\"buttons\">\n                <button type=\"submit\" className=\"CommentSaveBtn btn btn-primary\"\n                    onClick={e => {\n                        e.preventDefault()\n                        saveComment()\n                    }}>Save</button>\n                <button className=\"btn btn-secondary\" \n                    onClick={() => {\n                        const resolutionId = parseInt(props.match.params.resolutionId)\n                        props.history.push(`/comments/resolutions/${resolutionId}`)}}>\n                Cancel</button>\n                </div>\n\n                 \n            }\n            \n            \n        </form>\n    )\n\n}\n            \n        ","/home/cwelshofer/workspace/finalcapstone-client/src/components/Comments/Comment.js",["226"],"//child of HomeList, list of all posts, user can delete only their own post\nimport React, { useContext, useEffect } from \"react\"\nimport {Link} from \"react-router-dom\"\nimport { ResolutionContext } from \"../Resolutions/ResolutionProvider\"\nimport { CommentContext } from \"./CommentProvider\"\n\n\n\nexport const CommentList = (props) => {\n    \n    const {comments, getComments} = useContext(CommentContext)\n    const {resolution} = useContext(ResolutionContext)\n\n    const resolutionId = parseInt(props.match.params.resolutionId)\n    \n    console.log(comments)\n    useEffect(() => {\n       getComments(resolutionId)\n\n    },[])\n\n    return (\n        <>\n        <h2>Comments</h2>\n        <div><Link to={{pathname:`/home`}}>Back to Resolutions</Link></div>\n        {\n            comments !== [] ? comments.map(c => {\n                return <>\n                <ul>\n                    <li>\n                <div key={c.id} className=\"container__card\">\n                    <p>Subject: {c.subject}</p>\n                \n                    <p>Content: {c.content}</p>\n\n                    <p>Created On: {c.created_on}</p>\n\n                    <p>Author: {c.author.username}</p>\n                    \n                </div>\n                </li>\n                </ul>\n                </>\n                \n            }).reverse() : null\n        }\n             <Link className=\"resolutionLink\" to={`/resolutions/comments/create/${resolution.id}`}>\n            add Comment\n       \n    </Link>\n        </>\n    )\n}\n","/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/MyCompletedResolutions.js",["227","228","229"],"//shows user their own posts in MyPosts view, allows them to delete a post\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ResolutionContext } from \"./ResolutionProvider\";\nimport { UserContext } from \"../Profiles/UserProvider\"\n\n\nexport const MyCompletedResolutionList = () => {\n  const { getResolutionByUser, getCompletedResolutions, getCompletedResolutionsByUser   } = useContext(ResolutionContext);\n  const { getCurrentUser } = useContext(UserContext)\n\n  const [usersResolutions, setUsersResolutions] = useState([]);\n \n  useEffect(() => {\n    getCurrentUser()\n    //returns res.json() that is immediately passed to the next .then()\n    //res.json() is the current user object\n     \n      .then((user) => getCompletedResolutionsByUser(user.id))\n      .then(setUsersResolutions)\n  }, [])\n\n  return (\n    <>\n      <h2>My Resolutions</h2>\n      {usersResolutions.map((r) => {\n        return (\n          <div key={r.id} className=\"container__card\">\n            <div className=\"container__cardContent\">\n              <p>\n                <Link to={{ pathname: `resolutions/${r.id}` }}>\n                  <strong>{r.title}</strong>\n                </Link>\n              </p>\n              <p>{r.user.user.first_name}</p>\n              {r.category==null? \"\" :<p>{r.category.label}</p>}\n            </div>\n          </div>\n        )\n      }).reverse()}\n    </>\n  )\n}\n","/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/CompletedResolutions.js",["230"],"//child of HomeList, list of all posts, user can delete only their own post\nimport {Link} from \"react-router-dom\"\nimport React, { useContext, useEffect } from \"react\"\nimport { ResolutionContext } from \"./ResolutionProvider\"\nimport { Resolution } from \"./Resolution\"\n\nexport const CompletedResolutionList = () => {\n    // This state changes when `getLocations()` is invoked below\n    const { resolutions, getCompletedResolutions } = useContext(ResolutionContext)\n\n    /*\n        What's the effect this is reponding to? Component was\n        \"mounted\" to the DOM. React renders blank HTML first,\n        then gets the data, then re-renders.\n    */\n    useEffect(() => {\n        getCompletedResolutions()\n    }, [])\n\n    /*\n        This effect is solely for learning purposes. The effect\n        it is responding to is that the location state changed.\n    */\n    useEffect(() => {\n    }, [resolutions])\n\n    return (\n        <div className=\"resolutions\">\n           \n        {\n            resolutions.map(res => <Resolution key={res.id} resolution={res} />)\n        }\n         <Link className=\"resolutionLink\" to={'/resolutions/create'}>\n            add Resolution\n       \n    </Link>\n        </div>\n    )\n}","/home/cwelshofer/workspace/finalcapstone-client/src/components/Resolutions/AllUsersResolutions.js",["231","232"],"//shows user their own posts in MyPosts view, allows them to delete a post\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ResolutionContext } from \"./ResolutionProvider\";\nimport { UserContext } from \"../Profiles/UserProvider\"\n\n\nexport const AllUsersResolutions = () => {\n  const { getResolutionByUser, getCompletedResolutionsByUser  } = useContext(ResolutionContext);\n  const { getCurrentUser } = useContext(UserContext)\n\n  const [usersResolutions, setUsersResolutions] = useState([]);\n \n  useEffect(() => {\n    getCurrentUser()\n    //returns res.json() that is immediately passed to the next .then()\n    //res.json() is the current user object\n     \n      .then((user) => getCompletedResolutionsByUser(user.id))\n      .then(setUsersResolutions)\n  }, [])\n\n  return (\n    <>\n      <h2>My Resolutions</h2>\n      {usersResolutions.map((r) => {\n        return (\n          <div key={r.id} className=\"container__card\">\n            <div className=\"container__cardContent\">\n              <p>\n                <Link to={{ pathname: `resolutions/${r.id}` }}>\n                  <strong>{r.title}</strong>\n                </Link>\n              </p>\n              <p>{r.user.user.first_name}</p>\n              {r.category==null? \"\" :<p>{r.category.label}</p>}\n            </div>\n          </div>\n        )\n      }).reverse()}\n    </>\n  )\n}\n","/home/cwelshofer/workspace/finalcapstone-client/src/components/Profiles/ProfileResolutions.js",["233","234","235"],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":16,"column":10,"nodeType":"242","messageId":"243","endLine":16,"endColumn":20},{"ruleId":"240","severity":1,"message":"244","line":27,"column":10,"nodeType":"242","messageId":"243","endLine":27,"endColumn":29},{"ruleId":"240","severity":1,"message":"245","line":14,"column":11,"nodeType":"242","messageId":"243","endLine":14,"endColumn":14},{"ruleId":"240","severity":1,"message":"246","line":18,"column":10,"nodeType":"242","messageId":"243","endLine":18,"endColumn":33},{"ruleId":"240","severity":1,"message":"247","line":19,"column":10,"nodeType":"242","messageId":"243","endLine":19,"endColumn":22},{"ruleId":"240","severity":1,"message":"248","line":23,"column":9,"nodeType":"242","messageId":"243","endLine":23,"endColumn":24},{"ruleId":"249","severity":1,"message":"250","line":31,"column":6,"nodeType":"251","endLine":31,"endColumn":22,"suggestions":"252"},{"ruleId":"249","severity":1,"message":"253","line":42,"column":6,"nodeType":"251","endLine":42,"endColumn":22,"suggestions":"254"},{"ruleId":"240","severity":1,"message":"255","line":46,"column":10,"nodeType":"242","messageId":"243","endLine":46,"endColumn":14},{"ruleId":"240","severity":1,"message":"256","line":46,"column":16,"nodeType":"242","messageId":"243","endLine":46,"endColumn":23},{"ruleId":"240","severity":1,"message":"257","line":49,"column":9,"nodeType":"242","messageId":"243","endLine":49,"endColumn":21},{"ruleId":"240","severity":1,"message":"258","line":53,"column":9,"nodeType":"242","messageId":"243","endLine":53,"endColumn":22},{"ruleId":"249","severity":1,"message":"259","line":18,"column":8,"nodeType":"251","endLine":18,"endColumn":10,"suggestions":"260"},{"ruleId":"240","severity":1,"message":"261","line":3,"column":16,"nodeType":"242","messageId":"243","endLine":3,"endColumn":26},{"ruleId":"262","severity":1,"message":"263","line":49,"column":31,"nodeType":"264","messageId":"265","endLine":49,"endColumn":33},{"ruleId":"249","severity":1,"message":"266","line":16,"column":8,"nodeType":"251","endLine":16,"endColumn":10,"suggestions":"267"},{"ruleId":"240","severity":1,"message":"268","line":3,"column":22,"nodeType":"242","messageId":"243","endLine":3,"endColumn":31},{"ruleId":"249","severity":1,"message":"269","line":20,"column":6,"nodeType":"251","endLine":20,"endColumn":8,"suggestions":"270"},{"ruleId":"240","severity":1,"message":"271","line":7,"column":10,"nodeType":"242","messageId":"243","endLine":7,"endColumn":17},{"ruleId":"240","severity":1,"message":"272","line":7,"column":19,"nodeType":"242","messageId":"243","endLine":7,"endColumn":22},{"ruleId":"240","severity":1,"message":"273","line":7,"column":24,"nodeType":"242","messageId":"243","endLine":7,"endColumn":33},{"ruleId":"240","severity":1,"message":"274","line":7,"column":35,"nodeType":"242","messageId":"243","endLine":7,"endColumn":43},{"ruleId":"240","severity":1,"message":"275","line":10,"column":7,"nodeType":"242","messageId":"243","endLine":10,"endColumn":24},{"ruleId":"240","severity":1,"message":"276","line":13,"column":102,"nodeType":"242","messageId":"243","endLine":13,"endColumn":116},{"ruleId":"240","severity":1,"message":"277","line":13,"column":118,"nodeType":"242","messageId":"243","endLine":13,"endColumn":129},{"ruleId":"240","severity":1,"message":"278","line":13,"column":131,"nodeType":"242","messageId":"243","endLine":13,"endColumn":149},{"ruleId":"240","severity":1,"message":"245","line":15,"column":13,"nodeType":"242","messageId":"243","endLine":15,"endColumn":16},{"ruleId":"240","severity":1,"message":"279","line":20,"column":12,"nodeType":"242","messageId":"243","endLine":20,"endColumn":19},{"ruleId":"240","severity":1,"message":"280","line":20,"column":21,"nodeType":"242","messageId":"243","endLine":20,"endColumn":31},{"ruleId":"249","severity":1,"message":"281","line":42,"column":8,"nodeType":"251","endLine":42,"endColumn":10,"suggestions":"282"},{"ruleId":"283","severity":1,"message":"284","line":102,"column":40,"nodeType":"285","messageId":"286","endLine":102,"endColumn":42},{"ruleId":"283","severity":1,"message":"284","line":138,"column":40,"nodeType":"285","messageId":"286","endLine":138,"endColumn":42},{"ruleId":"240","severity":1,"message":"287","line":1,"column":10,"nodeType":"242","messageId":"243","endLine":1,"endColumn":22},{"ruleId":"249","severity":1,"message":"288","line":16,"column":8,"nodeType":"251","endLine":16,"endColumn":10,"suggestions":"289"},{"ruleId":"249","severity":1,"message":"290","line":42,"column":8,"nodeType":"251","endLine":42,"endColumn":34,"suggestions":"291"},{"ruleId":"292","severity":1,"message":"293","line":5,"column":1,"nodeType":"294","endLine":11,"endColumn":2},{"ruleId":"249","severity":1,"message":"295","line":18,"column":8,"nodeType":"251","endLine":18,"endColumn":10,"suggestions":"296"},{"ruleId":"249","severity":1,"message":"297","line":23,"column":8,"nodeType":"251","endLine":23,"endColumn":10,"suggestions":"298"},{"ruleId":"249","severity":1,"message":"299","line":18,"column":6,"nodeType":"251","endLine":18,"endColumn":8,"suggestions":"300"},{"ruleId":"249","severity":1,"message":"297","line":23,"column":6,"nodeType":"251","endLine":23,"endColumn":8,"suggestions":"301"},{"ruleId":"240","severity":1,"message":"261","line":2,"column":50,"nodeType":"242","messageId":"243","endLine":2,"endColumn":60},{"ruleId":"249","severity":1,"message":"299","line":24,"column":6,"nodeType":"251","endLine":24,"endColumn":8,"suggestions":"302"},{"ruleId":"249","severity":1,"message":"303","line":35,"column":6,"nodeType":"251","endLine":35,"endColumn":37,"suggestions":"304"},{"ruleId":"240","severity":1,"message":"305","line":6,"column":10,"nodeType":"242","messageId":"243","endLine":6,"endColumn":14},{"ruleId":"240","severity":1,"message":"261","line":6,"column":16,"nodeType":"242","messageId":"243","endLine":6,"endColumn":26},{"ruleId":"240","severity":1,"message":"306","line":16,"column":12,"nodeType":"242","messageId":"243","endLine":16,"endColumn":25},{"ruleId":"240","severity":1,"message":"307","line":17,"column":12,"nodeType":"242","messageId":"243","endLine":17,"endColumn":21},{"ruleId":"249","severity":1,"message":"308","line":37,"column":12,"nodeType":"251","endLine":37,"endColumn":14,"suggestions":"309"},{"ruleId":"240","severity":1,"message":"310","line":47,"column":11,"nodeType":"242","messageId":"243","endLine":47,"endColumn":26},{"ruleId":"311","severity":1,"message":"312","line":77,"column":23,"nodeType":"313","endLine":77,"endColumn":72},{"ruleId":"311","severity":1,"message":"312","line":78,"column":23,"nodeType":"313","endLine":78,"endColumn":89},{"ruleId":"240","severity":1,"message":"287","line":1,"column":10,"nodeType":"242","messageId":"243","endLine":1,"endColumn":22},{"ruleId":"249","severity":1,"message":"288","line":15,"column":8,"nodeType":"251","endLine":15,"endColumn":10,"suggestions":"314"},{"ruleId":"240","severity":1,"message":"315","line":1,"column":40,"nodeType":"242","messageId":"243","endLine":1,"endColumn":48},{"ruleId":"249","severity":1,"message":"316","line":13,"column":6,"nodeType":"251","endLine":13,"endColumn":8,"suggestions":"317"},{"ruleId":"249","severity":1,"message":"318","line":23,"column":8,"nodeType":"251","endLine":23,"endColumn":10,"suggestions":"319"},{"ruleId":"249","severity":1,"message":"320","line":20,"column":7,"nodeType":"251","endLine":20,"endColumn":9,"suggestions":"321"},{"ruleId":"240","severity":1,"message":"322","line":9,"column":11,"nodeType":"242","messageId":"243","endLine":9,"endColumn":30},{"ruleId":"240","severity":1,"message":"323","line":9,"column":32,"nodeType":"242","messageId":"243","endLine":9,"endColumn":55},{"ruleId":"249","severity":1,"message":"324","line":21,"column":6,"nodeType":"251","endLine":21,"endColumn":8,"suggestions":"325"},{"ruleId":"249","severity":1,"message":"326","line":18,"column":8,"nodeType":"251","endLine":18,"endColumn":10,"suggestions":"327"},{"ruleId":"240","severity":1,"message":"322","line":9,"column":11,"nodeType":"242","messageId":"243","endLine":9,"endColumn":30},{"ruleId":"249","severity":1,"message":"324","line":21,"column":6,"nodeType":"251","endLine":21,"endColumn":8,"suggestions":"328"},{"ruleId":"240","severity":1,"message":"329","line":10,"column":11,"nodeType":"242","messageId":"243","endLine":10,"endColumn":25},{"ruleId":"249","severity":1,"message":"330","line":21,"column":8,"nodeType":"251","endLine":21,"endColumn":10,"suggestions":"331"},{"ruleId":"249","severity":1,"message":"332","line":30,"column":6,"nodeType":"251","endLine":30,"endColumn":8,"suggestions":"333"},"no-native-reassign",["334"],"no-negated-in-lhs",["335"],"no-unused-vars","'UsersTable' is defined but never used.","Identifier","unusedVar","'AllUsersResolutions' is defined but never used.","'tag' is assigned a value but never used.","'selectedTagResolutionId' is assigned a value but never used.","'filteredTags' is assigned a value but never used.","'tagResolutionId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getResolutionById', 'getTags', 'getTagsByResolution', 'resolutionId', and 'setResolution'. Either include them or remove the dependency array.","ArrayExpression",["336"],"React Hook useEffect has a missing dependency: 'tags'. Either include it or remove the dependency array.",["337"],"'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleAddTags' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFalseResolutions'. Either include it or remove the dependency array.",["338"],"'useHistory' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getCurrentUser' and 'setCurrentUser'. Either include them or remove the dependency array.",["339"],"'useParams' is defined but never used.","React Hook useEffect has missing dependencies: 'getCurrentUser' and 'getResolutionByUser'. Either include them or remove the dependency array.",["340"],"'Grommet' is defined but never used.","'Box' is defined but never used.","'DataTable' is defined but never used.","'CheckBox' is defined but never used.","'controlledColumns' is assigned a value but never used.","'getResolutions' is assigned a value but never used.","'resolutions' is assigned a value but never used.","'completeResolution' is assigned a value but never used.","'checked' is assigned a value but never used.","'setChecked' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'editMode', 'getCategories', 'getResolutionById', 'getTags', 'getTagsByResolution', 'resolutionId', 'resolutionTags', and 'resolutionTagsArrayToObj'. Either include them or remove the dependency array.",["341"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'FormPrevious' is defined but never used.","React Hook useEffect has missing dependencies: 'getCurrentUser', 'getUsers', and 'setUser'. Either include them or remove the dependency array.",["342"],"React Hook useEffect has missing dependencies: 'editMode' and 'getTagById'. Either include them or remove the dependency array.",["343"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'getTags'. Either include it or remove the dependency array.",["344"],"React Hook useEffect has a missing dependency: 'getCurrentUser'. Either include it or remove the dependency array.",["345"],"React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["346"],["347"],["348"],"React Hook useEffect has missing dependencies: 'editMode' and 'getCategoryById'. Either include them or remove the dependency array.",["349"],"'Link' is defined but never used.","'subscriptions' is assigned a value but never used.","'subStatus' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCurrentUser', 'getSubscriptionByAuthor', 'getUserById', 'props.match.params', and 'setUser'. Either include them or remove the dependency array.",["350"],"'changeSubStatus' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["351"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["352"],"React Hook useEffect has missing dependencies: 'editMode', 'getComments', and 'props.match.params.commentId'. Either include them or remove the dependency array.",["353"],"React Hook useEffect has missing dependencies: 'getComments' and 'resolutionId'. Either include them or remove the dependency array.",["354"],"'getResolutionByUser' is assigned a value but never used.","'getCompletedResolutions' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCompletedResolutionsByUser' and 'getCurrentUser'. Either include them or remove the dependency array.",["355"],"React Hook useEffect has a missing dependency: 'getCompletedResolutions'. Either include it or remove the dependency array.",["356"],["357"],"'getCurrentUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUserById', 'props.match.params', and 'setUser'. Either include them or remove the dependency array.",["358"],"React Hook useEffect has missing dependencies: 'getResolutionByUser' and 'getUserById'. Either include them or remove the dependency array.",["359"],"no-global-assign","no-unsafe-negation",{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"380","fix":"381"},{"desc":"378","fix":"382"},{"desc":"380","fix":"383"},{"desc":"384","fix":"385"},{"desc":"386","fix":"387"},{"desc":"372","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"395","fix":"399"},{"desc":"400","fix":"401"},{"desc":"402","fix":"403"},"Update the dependencies array to be: [TagResolutions, getResolutionById, getTags, getTagsByResolution, resolutionId, setResolution]",{"range":"404","text":"405"},"Update the dependencies array to be: [resolutionTags, tags]",{"range":"406","text":"407"},"Update the dependencies array to be: [getFalseResolutions]",{"range":"408","text":"409"},"Update the dependencies array to be: [getCurrentUser, setCurrentUser]",{"range":"410","text":"411"},"Update the dependencies array to be: [getCurrentUser, getResolutionByUser]",{"range":"412","text":"413"},"Update the dependencies array to be: [editMode, getCategories, getResolutionById, getTags, getTagsByResolution, resolutionId, resolutionTags, resolutionTagsArrayToObj]",{"range":"414","text":"415"},"Update the dependencies array to be: [getCurrentUser, getUsers, setUser]",{"range":"416","text":"417"},"Update the dependencies array to be: [editMode, getTagById, props.match.params.tagId]",{"range":"418","text":"419"},"Update the dependencies array to be: [getTags]",{"range":"420","text":"421"},"Update the dependencies array to be: [getCurrentUser]",{"range":"422","text":"423"},"Update the dependencies array to be: [getCategories]",{"range":"424","text":"425"},{"range":"426","text":"423"},{"range":"427","text":"425"},"Update the dependencies array to be: [editMode, getCategoryById, props.match.params.categoryId]",{"range":"428","text":"429"},"Update the dependencies array to be: [getCurrentUser, getSubscriptionByAuthor, getUserById, props.match.params, setUser]",{"range":"430","text":"431"},{"range":"432","text":"417"},"Update the dependencies array to be: [getUsers]",{"range":"433","text":"434"},"Update the dependencies array to be: [editMode, getComments, props.match.params.commentId]",{"range":"435","text":"436"},"Update the dependencies array to be: [getComments, resolutionId]",{"range":"437","text":"438"},"Update the dependencies array to be: [getCompletedResolutionsByUser, getCurrentUser]",{"range":"439","text":"440"},"Update the dependencies array to be: [getCompletedResolutions]",{"range":"441","text":"442"},{"range":"443","text":"440"},"Update the dependencies array to be: [getUserById, props.match.params, setUser]",{"range":"444","text":"445"},"Update the dependencies array to be: [getResolutionByUser, getUserById]",{"range":"446","text":"447"},[1490,1506],"[TagResolutions, getResolutionById, getTags, getTagsByResolution, resolutionId, setResolution]",[1913,1929],"[resolutionTags, tags]",[692,694],"[getFalseResolutions]",[476,478],"[getCurrentUser, setCurrentUser]",[767,769],"[getCurrentUser, getResolutionByUser]",[1915,1917],"[editMode, getCategories, getResolutionById, getTags, getTagsByResolution, resolutionId, resolutionTags, resolutionTagsArrayToObj]",[494,496],"[getCurrentUser, getUsers, setUser]",[1483,1509],"[editMode, getTagById, props.match.params.tagId]",[670,672],"[getTags]",[763,765],"[getCurrentUser]",[629,631],"[getCategories]",[709,711],[847,849],[1083,1114],"[editMode, getCategoryById, props.match.params.categoryId]",[1468,1470],"[getCurrentUser, getSubscriptionByAuthor, getUserById, props.match.params, setUser]",[454,456],[382,384],"[getUsers]",[703,705],"[editMode, getComments, props.match.params.commentId]",[615,617],"[getComments, resolutionId]",[850,852],"[getCompletedResolutionsByUser, getCurrentUser]",[709,711],"[getCompletedResolutions]",[818,820],[861,863],"[getUserById, props.match.params, setUser]",[1116,1118],"[getResolutionByUser, getUserById]"]